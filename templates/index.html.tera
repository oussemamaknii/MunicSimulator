<!DOCTYPE html>
<html>
<title>Munic Simulator</title>

<head>
  <link href="https://cdn.materialdesignicons.com/5.4.55/css/materialdesignicons.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700" rel="stylesheet">
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.4.1/css/all.css"
    integrity="sha384-5sAR7xN1Nv6T6+dT2mhtzEpVJvfS3NScPQTrOxhwjIuvcA67KV2R5Jz6kr4abQsz" crossorigin="anonymous">
  <style>
    .styled-table {
      border-collapse: collapse;
      margin: 25px 0;
      
  margin-left: auto;
  margin-right: auto;
      font-size: 0.9em;
      font-family: sans-serif;
      min-width: 400px;
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
  }
  .styled-table thead tr {
    background-color: #4286f4;
    color: #ffffff;
    text-align: left;
}
.styled-table th,
.styled-table td {
    padding: 12px 15px;
}
.styled-table tbody tr {
  border-bottom: 1px solid #dddddd;
}
.styled-table tbody tr.active-row {
  font-weight: bold;
  color: #4286f4;
}

.styled-table tbody tr:nth-of-type(even) {
  background-color: #f3f3f3;
}

.styled-table tbody tr:last-of-type {
  border-bottom: 2px solid #4286f4;
}
    .label-file {
      cursor: pointer;
      color: #00b1ca;
      font-weight: bold;
      margin-right: 14%;
      margin-left: 14%;
    }

    .label-file:hover {
      color: #25a5c4;
    }

    .input-file {
      display: none;
    }

    .alert {
      border-radius: 12px;
      width: 700px;
      max-width: 90%;
      padding: 16px 22px 17px 20px;
      display: flex;
      align-items: center;
      margin-left: auto;
      margin-right: auto;
      margin-bottom: 10px;
      margin-top: 10px;
    }

    .alert-warning {
      background: #f2a600;
    }

    .alert .icon__wrapper {
      height: 34px;
      width: 34px;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.253);
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .alert .icon__wrapper span {
      font-size: 21px;
      color: #fff;
    }

    .alert p {
      color: #fff;
      font-family: Verdana;
      margin-left: 10px;
    }

    .alert p a,
    .alert p a:visited,
    .alert p a:active {
      color: #fff;
    }

    .content {
      display: flex;
      justify-content: space-between;
      margin: 1em auto;
      padding: 1px 0;
    }

    select {
      background-color: rgb(53, 53, 53);
      border: none;
      width: 200px;
      height: 40px;
      font-family: inherit;
      font-size: inherit;
      cursor: inherit;
      line-height: inherit;
    }

    #http {
      display: inline-block;
    }

    .logged-in {
      display: inline-block;
      margin-right: 10px;
      color: green;
    }

    .logged-out {
      display: inline-block;
      margin-right: 10px;
      color: red;
    }

    .waiting {
      display: inline-block;
      margin-right: 10px;
      color: yellow;
    }

    html,
    body {
      display: flex;
      justify-content: center;
      font-family: Roboto, Arial, sans-serif;
      font-size: 15px;
    }

    #cord_form {
      border: 5px solid #f1f1f1;
    }

    .slct {
      width: 100%;
      padding: 16px 8px;
      margin: 8px 0;
      display: inline-block;
      border: 1px solid #ccc;
      box-sizing: border-box;
    }

    input[type=text],
    input[type=password] {
      width: 100%;
      padding: 16px 8px;
      margin: 8px 0;
      display: inline-block;
      border: 1px solid #ccc;
      box-sizing: border-box;
    }

    .icon {
      font-size: 110px;
      display: flex;
      justify-content: center;
      color: #4286f4;
    }

    .button {
      background-color: #4286f4;
      color: white;
      padding: 14px 0;
      margin: 10px 0;
      border: none;
      cursor: grab;
      width: 48%;
    }

    #btn {
      background-color: #4286f4;
      color: white;
      padding: 10px 10px;
      border: none;
      cursor: grab;
    }

    h1 {
      text-align: center;
      font-size: 18;
    }

    button:hover {
      opacity: 0.8;
    }
    
    .formcontainer {
      text-align: center;
      margin: 24px 60px 16px;
    }

    .container {
      padding: 16px 0;
      text-align: left;
    }

    span.psw {
      float: right;
      padding-top: 0;
      padding-right: 15px;
    }
  </style>
  <script type="text/javascript">
  </script>
</head>

<body>

  <div style="margin-left:auto;margin-right:auto;">
  <table class="styled-table" id="thread-table">
    <thead>
        <tr>
            <th>Thread URL</th>
            <th>Abort</th>
        </tr>
    </thead>
    <tbody >
    </tbody>
  </table>

  <form enctype='multipart/form-data' method="post" action="/upload">
    <div class="formcontainer">
      <div class="container">
        <div class="content">
          <label for="track_json_file" class="label-file"><strong>Upload a Track json file</strong></label>

          <input type="file" id="track_json_file" class="input-file" name="track_json_file" accept="application/json">

          <label for="presence_json_file" class="label-file"><strong>Upload a Presence json file</strong></label>

          <input type="file" id="presence_json_file" class="input-file" name="presence_json_file"
            accept="application/json">
        </div>
        <button type="submit" class="button" id="upload_button" style="margin-left: 26%;"><strong>Upload !!</strong></button>

      </div>
  </form>

  <form id="cord_form" enctype='multipart/form-data' method="post" action="/simulate">
    <div class="formcontainer">
      <div class="container">

        <label><strong>Your URL :</strong></label>
        <input name="url" id="url" type="text" placeholder="Enter your Notification URL">
        <p>{{ msg }}</p>

        <div id="http-div">
          <span class="logged-in" id="newSpan">‚óè</span>
          <p id="http"></p>
        </div>

        <h1>Coordinates</h1>
        <div class="alert alert-warning">
          <div class="icon__wrapper">
            <span class="mdi mdi-alert-outline"></span>
          </div>
          <p>You are replaying the exact same trip picked by date and file !! if you want to simulate using real
            Coordinates in real time and customized fields, please enter a valid
            google maps api key !
            <a href="https://developers.google.com/maps/documentation/javascript/get-api-key?hl=fr">How to cretae
              one
              !</a>
          </p>
        </div>
        <label><strong>Google maps API KEY</strong></label>
        <input name="key" id="key" type="password" placeholder="Enter your GM API KEY">
        <div class="alert alert-warning" id="alert-container">
          <div class="icon__wrapper">
            <span class="mdi mdi-alert-outline"></span>
          </div>
          <p>By doing a real-time simulation you may run out of fields data, because it
            depends on the refrence track files we are using ... (Work in progress) !!
          </p>
        </div>
        <label><strong>Source</strong></label>
        <input name="lat" id="lat" type="text" placeholder="Enter Source Location">
        <label><strong>Destination</strong></label>
        <input name="lon" id="lon" type="text" placeholder="Enter Destination Location">

        <div id="http-div" class="content">
          <label><strong>Choose a track file </strong></label>
          <div class="select">
            <select name="track_file" id="tf_select">
              <option id="slct" value="">--Choose a file--</option>
              {% for file, data in track_dates | group_by(attribute="_id.file") %}
              {% if file %}
              <option id="slct" value="{{file}}"> {{file}}</option>
              {% endif %}
              {% endfor %}
            </select>
          </div>
          <label><strong>Choose a presence file </strong></label>
          <div class="select">
            <select name="presence_file" id="pf_select">
              <option id="slct" value="">--Choose a file--</option>
              {% for file, data in presence_dates | group_by(attribute="_id.file") %}
              {% if file %}
              <option id="slct" value="{{file}}"> {{file}}</option>
              {% endif %}
              {% endfor %}
            </select>
          </div>
        </div>

        <div id="http-div" class="content">
          <label><strong>Choose a track date </strong></label>
          <div class="select">
            <select name="track_option" id="t_select">
            </select>
          </div>
          <label><strong>Choose a presence date </strong></label>
          <div class="select">
            <select name="presence_option" id="p_select">
            </select>
          </div>
        </div>
      </div>
      <button type="submit" class="button" id="button"><strong>Simulate !!</strong></button>
  </form>
</div>
</body>
<script src="https://unpkg.com/validator@latest/validator.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
<script type="text/javascript">
  const url = document.getElementById("url");
  const presence_json_file = document.getElementById("presence_json_file");
  const track_json_file = document.getElementById("track_json_file");
  const button1 = document.getElementById("button");
  const upload_button = document.getElementById("upload_button");
  const http = document.getElementById("http");
  const http_div = document.getElementById("http-div");
  const key = document.getElementById("key");
  const lon = document.getElementById("lon");
  const lat = document.getElementById("lat");
  const newSpan = document.getElementById("newSpan");
  lon.disabled = true;
  lat.disabled = true;
  button1.disabled = true;
  upload_button.disabled = true;
  const evtSource = new EventSource("/events");

  var tf_select = document.getElementById("tf_select");
  var pf_select = document.getElementById("pf_select");
  var t_select = document.getElementById("t_select");
  var p_select = document.getElementById("p_select");

  evtSource.onopen = function () {
    console.log("Connection to server opened.");
  };

  evtSource.onmessage = function (e) {
    const obj = JSON.parse(e.data);
    var tbodyRef = document.getElementById('thread-table').getElementsByTagName('tbody')[0];

    tbodyRef.innerHTML = '';

    for (var i = 0; i < obj.threads.length; i++) {
      var newRow = tbodyRef.insertRow();
      newRow.setAttribute("id","row"+i);

      var newCell = newRow.insertCell();
      newCell.setAttribute("class","column-data");

      var newText = document.createTextNode(obj.threads[i]);
      
      newCell.appendChild(newText);
      
      var newCell1 = newRow.insertCell();

      var btn = document.createElement("button");
      btn.setAttribute("class","inp");
      btn.setAttribute("id","btn");
      btn.textContent = "Abort Thread !";
      newCell1.appendChild(btn);
    }

    let allButtons = document.getElementsByClassName('inp');
    for (let button of allButtons) {
       button.addEventListener('click', () => {
          var clickedElement = event.target
          var clickedRow = clickedElement.parentNode.parentNode.id;
          var rowData = document.getElementById(clickedRow).querySelectorAll('.column-data');
          let url = rowData[0].innerHTML;
          e.preventDefault();
          $.ajax({
            type: "POST",
            url: "/abort",
            data: url,
            success: function(result) {
              console.log("success")
            },
            error: function(result) {
              console.log("error")
            }
          });
       });
    }

    if (e.data.http == 1) {
      newSpan.setAttribute('class', 'logged-in');
      http.textContent = "HTTP Request Status : 200";
    }
    else if (e.data.http == 0) {
      newSpan.setAttribute('class', 'logged-out');
      http.textContent = "HTTP Request Status : 503";
    }
    else {
      newSpan.setAttribute('class', 'waiting');
      http.textContent = "HTTP Request Status : _";
    }
  };

  evtSource.onerror = function () {
    console.log("EventSource failed.");
  };


  key.addEventListener("input", (event) => {
    if (key.value == "") {
      lon.disabled = true;
      lat.disabled = true;
    } else {
      lat.disabled = false;
      lon.disabled = false;
    }
  });

  track_json_file.addEventListener("change", (event) => {
    if (event.target.files[0]) {
      upload_button.disabled = false;
    } else {
      upload_button.disabled = true;
    }
  });

  presence_json_file.addEventListener("change", (event) => {
    if (event.target.files[0]) {
      upload_button.disabled = false;
    } else {
      upload_button.disabled = true;
    }
  });

  const tdata = {{ track_dates| json_encode() | safe }};
  const pdata = {{ presence_dates| json_encode() | safe }};

  tf_select.addEventListener("change", (event) => {
    removeOptions(t_select);
    for (var i = 0; i < tdata.length; i++) {
      if (tdata[i]._id.file == event.target.value) {
        var new_option = document.createElement("option");
        new_option.text = `${tdata[i]._id.year}-${tdata[i]._id.month}-${tdata[i]._id.day}`;
        new_option.value = `${tdata[i]._id.year}-${tdata[i]._id.month}-${tdata[i]._id.day}`;
        t_select.appendChild(new_option);
      }
    };
    if (tf_select.value == "" && pf_select.value != null && validator.isURL(url.value)) {
      button1.disabled = true;
    } else
      button1.disabled = false;
  });

  pf_select.addEventListener("change", (event) => {
    removeOptions(p_select);
    for (var i = 0; i < pdata.length; i++) {
      if (pdata[i]._id.file == event.target.value) {
        var new_option = document.createElement("option");
        new_option.text = `${pdata[i]._id.year}-${pdata[i]._id.month}-${pdata[i]._id.day}`;
        new_option.value = `${pdata[i]._id.year}-${pdata[i]._id.month}-${pdata[i]._id.day}`;
        p_select.appendChild(new_option);
      }
    };
    if (tf_select.value == "" && pf_select.value != null && validator.isURL(url.value)) {
      button1.disabled = true;
    } else
      button1.disabled = false;
  });

  function removeOptions(selectElement) {
    var i, L = selectElement.options.length - 1;
    for (i = L; i >= 0; i--) {
      selectElement.remove(i);
    }
  }

  url.addEventListener("input", (event) => {
    button1.disabled = ((tf_select.value == "") && (pf_select.value == "") && (validator.isURL(event.target.value)));
  });
</script>

</html>